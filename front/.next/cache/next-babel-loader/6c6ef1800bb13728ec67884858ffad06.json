{"ast":null,"code":"var _jsxFileName = \"/Users/dujak/project/node-bird-study/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { useSelector } from 'react-redux';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport PostImages from './PostImages';\nimport FollowButton from './FollowButton';\nconst CardWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const id = useSelector(state => state.user.me && state.user.me.id);\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  return __jsx(CardWrapper, {\n    key: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 23\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }))],\n    extra: __jsx(FollowButton, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: `${post.Comments.length} 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Link, {\n        href: {\n          pathname: '/user',\n          query: {\n            id: item.User.id\n          }\n        },\n        as: `/user/${item.User.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 23\n        }\n      }, __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 26\n        }\n      }, item.User.nickname[0]))),\n      content: item.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any)\n  })\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/dujak/project/node-bird-study/front/components/PostCard.js"],"names":["React","useState","useCallback","Card","Button","Avatar","Popover","List","Comment","PropTypes","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","styled","Link","useSelector","CommentForm","PostCardContent","PostImages","FollowButton","CardWrapper","div","PostCard","post","commentFormOpened","setCommentFormOpened","id","state","user","me","liked","setLiked","onToggleLike","prev","onToggleComment","Images","User","nickname","content","Comments","length","item","pathname","query","propTypes","shape","number","object","string","createdAt","arrayOf","any"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { useSelector } from 'react-redux';\n\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport PostImages from './PostImages';\nimport FollowButton from './FollowButton';\n\nconst CardWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst PostCard = ({ post }) => {\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const id = useSelector((state) => state.user.me && state.user.me.id);\n\n  const [liked, setLiked] = useState(false);\n\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n  }, []);\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  return (\n    <CardWrapper key={post.id}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked\n            ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n            : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n          <MessageOutlined key=\"message\" onClick={onToggleComment} />,\n          <Popover\n            key=\"ellipsis\"\n            content={(\n              <Button.Group>\n                {id && post.User.id === id\n                  ? (\n                    <>\n                      <Button>수정</Button>\n                      <Button type=\"danger\">삭제</Button>\n                    </>\n                  )\n                  : <Button>신고</Button>}\n              </Button.Group>\n            )}\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n        extra={<FollowButton post={post} />}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={<PostCardContent postData={post.content} />}\n        />\n      </Card>\n      {commentFormOpened && (\n        <>\n          <CommentForm post={post} />\n          <List\n            header={`${post.Comments.length} 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments}\n            renderItem={(item) => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={(\n                    <Link href={{ pathname: '/user', query: { id: item.User.id } }} as={`/user/${item.User.id}`}>\n                      <a><Avatar>{item.User.nickname[0]}</Avatar></a>\n                    </Link>\n                  )}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </>\n      )}\n    </CardWrapper>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any),\n  }),\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}