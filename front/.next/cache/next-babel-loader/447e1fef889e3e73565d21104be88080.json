{"ast":null,"code":"var _jsxFileName = \"/Users/dujak/project/node-bird-study/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading,\n    retweetError\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 20\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/dujak/project/node-bird-study/front/pages/index.js"],"names":["React","useEffect","useSelector","useDispatch","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","LOAD_USER_REQUEST","Home","dispatch","me","state","user","mainPosts","hasMorePosts","loadPostsLoading","retweetError","post","alert","type","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","id","addEventListener","removeEventListener","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAST,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AACFC,IAAAA,SADE;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,gBAHE;AAIFC,IAAAA;AAJE,MAKFf,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACM,IAAlB,CALf;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,YAAJ,EAAkB;AACdE,MAAAA,KAAK,CAACF,YAAD,CAAL;AACH;AACJ,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEZ;AADD,KAAD,CAAR;AAGAE,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEb;AADD,KAAD,CAAR;AAGH,GAPQ,EAON,EAPM,CAAT;AASAN,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASoB,QAAT,GAAoB;AAChB,UACIC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF5C,EAGE;AACE,YAAIZ,YAAY,IAAI,CAACC,gBAArB,EAAuC;AAAA;;AACnC,gBAAMY,MAAM,iBAAGd,SAAS,CAACA,SAAS,CAACe,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;AACApB,UAAAA,QAAQ,CAAC;AACLU,YAAAA,IAAI,EAAEb,kBADD;AAELqB,YAAAA;AAFK,WAAD,CAAR;AAIH;AACJ;AACJ;;AACDN,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCV,QAAlC;AACA,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCX,QAArC;AACH,KAFD;AAGH,GAnBQ,EAmBN,CAACN,YAAD,EAAeC,gBAAf,EAAiCF,SAAjC,CAnBM,CAAT;AAqBA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAEKG,SAAS,CAACmB,GAAV,CAAef,IAAD,IACX,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACY,EAApB;AAAwB,IAAA,IAAI,EAAEZ,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFL,CADJ;AAQH,CAtDD;;AAwDA,eAAeT,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport AppLayout from \"../components/AppLayout\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const { me } = useSelector((state) => state.user);\n    const {\n        mainPosts,\n        hasMorePosts,\n        loadPostsLoading,\n        retweetError,\n    } = useSelector((state) => state.post);\n\n    useEffect(() => {\n        if (retweetError) {\n            alert(retweetError);\n        }\n    }, [retweetError]);\n\n    useEffect(() => {\n        dispatch({\n            type: LOAD_USER_REQUEST,\n        });\n        dispatch({\n            type: LOAD_POSTS_REQUEST,\n        });\n    }, []);\n\n    useEffect(() => {\n        function onScroll() {\n            if (\n                window.pageYOffset + document.documentElement.clientHeight >\n                document.documentElement.scrollHeight - 300\n            ) {\n                if (hasMorePosts && !loadPostsLoading) {\n                    const lastId = mainPosts[mainPosts.length - 1]?.id;\n                    dispatch({\n                        type: LOAD_POSTS_REQUEST,\n                        lastId,\n                    });\n                }\n            }\n        }\n        window.addEventListener(\"scroll\", onScroll);\n        return () => {\n            window.removeEventListener(\"scroll\", onScroll);\n        };\n    }, [hasMorePosts, loadPostsLoading, mainPosts]);\n\n    return (\n        <AppLayout>\n            {me && <PostForm />}\n            {mainPosts.map((post) => (\n                <PostCard key={post.id} post={post} />\n            ))}\n        </AppLayout>\n    );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}